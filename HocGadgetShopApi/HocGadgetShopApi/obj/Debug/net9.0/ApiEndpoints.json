[
  {
    "ContainingType": "HocGadgetShopApi.Controllers.CustomerController",
    "Method": "SaveCustomerData",
    "RelativePath": "api/Customer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestDto",
        "Type": "HocGadgetShopApi.Models.CustomerRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.CustomerController",
    "Method": "GetCustomerData",
    "RelativePath": "api/Customer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.CustomerController",
    "Method": "DeleteCustomerData",
    "RelativePath": "api/Customer",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.CustomerController",
    "Method": "UpdateCustomerData",
    "RelativePath": "api/Customer",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerRequest",
        "Type": "HocGadgetShopApi.Models.CustomerRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.InventoryController",
    "Method": "SaveInventoryData",
    "RelativePath": "api/Inventory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestDto",
        "Type": "HocGadgetShopApi.Models.InventoryRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.InventoryController",
    "Method": "GetInventoryData",
    "RelativePath": "api/Inventory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.InventoryController",
    "Method": "DeleteInventoryData",
    "RelativePath": "api/Inventory",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.InventoryController",
    "Method": "UpdateInventoryData",
    "RelativePath": "api/Inventory",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryRequest",
        "Type": "HocGadgetShopApi.Models.InventoryRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "HocGadgetShopApi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[HocGadgetShopApi.WeatherForecast, HocGadgetShopApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]